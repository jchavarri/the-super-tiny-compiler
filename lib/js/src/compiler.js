// Generated by BUCKLESCRIPT VERSION 1.9.3, PLEASE EDIT WITH CARE
'use strict';

var List        = require("bs-platform/lib/js/list.js");
var Block       = require("bs-platform/lib/js/block.js");
var Caml_string = require("bs-platform/lib/js/caml_string.js");

function explode(s) {
  var _i = s.length - 1 | 0;
  var _l = /* [] */0;
  while(true) {
    var l = _l;
    var i = _i;
    if (i < 0) {
      return l;
    } else {
      _l = /* :: */[
        Caml_string.get(s, i),
        l
      ];
      _i = i - 1 | 0;
      continue ;
      
    }
  };
}

function tokenizer(input) {
  var _input = explode(input);
  var _tokens = /* [] */0;
  while(true) {
    var tokens = _tokens;
    var input$1 = _input;
    if (input$1) {
      var any = input$1[0];
      if (any !== 40) {
        _tokens = /* :: */[
          /* Other */Block.__(1, [any]),
          tokens
        ];
        _input = input$1[1];
        continue ;
        
      } else {
        _tokens = /* :: */[
          /* Paren */Block.__(0, [/* "(" */40]),
          tokens
        ];
        _input = input$1[1];
        continue ;
        
      }
    } else {
      return List.rev(tokens);
    }
  };
}

console.log(tokenizer("Test( one ("));

exports.explode   = explode;
exports.tokenizer = tokenizer;
/*  Not a pure module */
